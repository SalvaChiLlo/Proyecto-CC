version: '3'
volumes:
  minio:
    driver: local
  postgres:
    driver: local

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    ports: 
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9080:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_CLUSTERS_0_NAME}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
      KAFKA_CLUSTERS_0_METRICS_PORT: ${KAFKA_CLUSTERS_0_METRICS_PORT}
    labels:
      - project=cc
      
  minio:
    image: minio/minio:latest
    restart: always
    ports: 
      - 9000:9000
      - 9090:9090
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER} # MINIO_SERVER_ACCESS_KEY
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD} # MINIO_SERVER_SECRET_KEY
      - MINIO_SERVER_URL=${MINIO_SERVER_URL}
      - MINIO_BUCKET=${MINIO_BUCKET}
    volumes:
      - minio:/data
    command: -c "mkdir -p /data/$$MINIO_BUCKET && minio server /data --console-address \":9090\""
    entrypoint: "/bin/bash"
  
  postgres:
    image: postgres:15
    restart: always
    ports:
      - 5433:5432
    environment: 
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
    volumes:
      - postgres:/var/lib/postgresql/data
    
  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    restart: always
    depends_on:
      - postgres
    ports:
      - 8082:8080
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      # - KC_HOSTNAME=dev.int
    command: "start-dev"

  worker:
    image: salvachll/worker-proyectocc
    # build: ./worker
    depends_on:
      - kafka
    environment:
      - NODE_ENV=${WORKER_NODE_ENV}
      - PRODUCTION_KAFKA_URL=${KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
      - WORKER_DATA_FOLDER=${WORKER_DATA_FOLDER}
      - MINIO_URL=${MINIO_URL}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    volumes:
      - ${HOME}/Downloads/pruebas:/tmp/jobexecutor

  frontend:
    image: salvachll/frontend-proyectocc
    # build: ./frontend
    depends_on:
      - kafka
    environment:
      - NODE_ENV=${FRONTEND_NODE_ENV}
      - PRODUCTION_PORT=${FRONTEND_PRODUCTION_PORT}
      - PRODUCTION_IP=${FRONTEND_PRODUCTION_IP}
      - PRODUCTION_KAFKA_URL=${KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
      - FRONTEND_DATA_DIR=${FRONTEND_DATA_DIR}
      - MINIO_URL=${MINIO_URL}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    volumes:
      - ${PWD}/keycloak.json:/usr/src/app/build/app/keycloak.json
    ports:
      - 80:9000